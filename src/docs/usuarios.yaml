paths:
  /usuarios:
    get:
      summary: Obtiene todos los usuarios
      tags: [Usuarios]
      responses:
        200:
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      summary: Crea un nuevo usuario
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
                - email
                - contraseña
              properties:
                nombre:
                  type: string
                  example: Carlos López
                email:
                  type: string
                  example: carlos@example.com
                contraseña:
                  type: string
                  example: jalakslkfjaijeafasd
      responses:
        201:
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        400:
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /usuarios/{id}:
    get:
      summary: Obtiene un usuario por ID
      tags: [Usuarios]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      responses:
        200:
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Actualiza un usuario existente
      tags: [Usuarios]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  example: Carlos López Actualizado
                email:
                  type: string
                  example: carlos.nuevo@example.com
      responses:
        200:
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Elimina un usuario
      tags: [Usuarios]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      responses:
        204:
          description: Usuario eliminado exitosamente
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

